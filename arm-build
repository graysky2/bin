#!/bin/bash

#
# helper for Arch ARM clean-chroot builds
#
# Expects distcc using distccd-alarm (AUR) to be setup and running on server
# as well as NFS export on server to be present
#

# mount point on the RPi for building which is expected to be an nfs export
MOUNTPOINT=/scratch

# the servername exporting the nfs build space
SERVER=ease.lan

# regular user
USER=$(whoami)

setup() {
  # sanity checks
  # these three should be passed by this script to this function so fail if they are not
  for var in "$NUMBER" "$PORT" "$PACMANCONF" "$CACHEDIR"; do
    [[ -n $var ]] || { echo "    $var is not defined so exiting"; exit 1; }
  done

  [[ ! -d "$MOUNTPOINT/armc$NUMBER" ]] && mkdir "$MOUNTPOINT/armc$NUMBER"

  # If the root isn't present make it
  if [[ ! -d "$MOUNTPOINT/armc$NUMBER/root" ]]; then
    echo "--> No chroot detected so build one..."
    runuser -l "$USER" -c "mkarchroot -M $MAKC -c $CACHEDIR $MOUNTPOINT/armc$NUMBER/root base-devel distcc" || exit 1

    # use our mirrorlist
    cp /etc/pacman.d/mirrorlist "$MOUNTPOINT"/armc"$NUMBER"/root/etc/pacman.d
  else
    # there must be a root so update it first
    echo "--> Found a chroot so updating it..."
    runuser -l "$USER" -c "arch-nspawn -c $CACHEDIR -C /tmp/pac$NUMBER.conf $MOUNTPOINT/armc$NUMBER/root pacman -Syu --noconfirm"
  fi
}

usage() {
  echo
  echo " --> all setup!"
  echo " --> cd $MOUNTPOINT/path/to/PKGBUILD"
  echo " --> MAKEFLAGS=-j16 makechrootpkg -r $MOUNTPOINT/armc$NUMBER"
}

if [ $UID != "0" ]; then
  echo "You must run this script as root." 1>&2
  exit 1
fi

case "$1" in
  6) export NUMBER=6 PORT=3634 PACMANCONF=/tmp/pac6.conf CACHEDIR=/var/cache/pacman/pkg6 MAKC=~/bin/makepkg.armv6h
    sed -e '/Architecture =/ s,7h,6h,' /etc/pacman.conf > /tmp/pac6.conf
    setup
    usage
    ;;
  7) export NUMBER=7 PORT=3635 PACMANCONF=/tmp/pac7.conf CACHEDIR=/var/cache/pacman/pkg MAKC=~/bin/makepkg.armv7h
    cp /etc/pacman.conf /tmp/pac7.conf
    setup
    usage
    ;;
  8) export NUMBER=8 PORT=3636 PACMANCONF=/tmp/pac8.conf CACHEDIR=/var/cache/pacman/pkg MAKC=~/bin/makepkg.armv8
    cp /etc/pacman.conf /tmp/pac8.conf
    setup
    usage
    ;;
  *) echo "usage: $0 {6,7,8}" ;;
esac
exit 0
# vim:set ts=2 sw=2 et:
